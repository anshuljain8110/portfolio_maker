{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Portfolio maker\\\\frontend\\\\src\\\\components\\\\create\\\\Create.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport \"./Create.css\";\nimport { Data } from '../../context/Userdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [loading, setloading] = useState(false);\n  const b = useContext(Data);\n  const Func = async () => {\n    setloading(true);\n    let data = {\n      \"maincolor\": b.maincolor,\n      \"username\": b.username,\n      \"namecolor\": b.namecolor,\n      \"profession\": b.profession,\n      \"professioncolor\": b.professioncolor,\n      \"description\": b.description,\n      \"descriptioncolor\": b.descriptioncolor,\n      \"cvlink\": b.cvlink,\n      \"cvcolor\": b.cvcolor,\n      \"mainimage\": b.mainimage,\n      \"mainimagecolor\": b.mainimagecolor,\n      \"contactbackgroundcolor\": b.contactbackgroundcolor,\n      \"contactcolor\": b.contactcolor,\n      \"location\": b.location,\n      \"email\": b.email,\n      \"github\": b.githublink,\n      \"telegram\": b.telegramlink,\n      \"insta\": b.insta,\n      \"leetcode\": b.leetlink,\n      \"yt\": b.ytlink,\n      \"ldin\": b.ldinlink\n    };\n    data = JSON.stringify(data);\n    console.log(data);\n    let response = await fetch(\"http://localhost:5000/update/6534d23d11750003f8c19c8d\", {\n      mode: 'no-cors',\n      headers: {\n        \"Accept\": \"*/*\",\n        \"Content-Type\": \"application/json\",\n        \"data\": data\n      }\n    });\n    response = await response.json();\n    console.log(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"create\",\n    onClick: Func,\n    children: \"create\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Create, \"pLgNagJckQr2tCo0bI6EQWO0wyM=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useContext","useState","Data","jsxDEV","_jsxDEV","Create","_s","loading","setloading","b","Func","data","maincolor","username","namecolor","profession","professioncolor","description","descriptioncolor","cvlink","cvcolor","mainimage","mainimagecolor","contactbackgroundcolor","contactcolor","location","email","githublink","telegramlink","insta","leetlink","ytlink","ldinlink","JSON","stringify","console","log","response","fetch","mode","headers","json","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Portfolio maker/frontend/src/components/create/Create.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport \"./Create.css\"\r\nimport { Data } from '../../context/Userdata'\r\n\r\nexport default function Create() {\r\n    const [loading, setloading] = useState(false)\r\n    const b = useContext(Data)\r\n    const Func = async() => {\r\n        setloading(true)\r\n        let data = {\r\n            \"maincolor\": b.maincolor,\r\n            \"username\": b.username,\r\n            \"namecolor\": b.namecolor,\r\n            \"profession\": b.profession,\r\n            \"professioncolor\": b.professioncolor,\r\n            \"description\": b.description,\r\n            \"descriptioncolor\": b.descriptioncolor,\r\n            \"cvlink\": b.cvlink,\r\n            \"cvcolor\": b.cvcolor,\r\n            \"mainimage\": b.mainimage,\r\n            \"mainimagecolor\": b.mainimagecolor,\r\n            \"contactbackgroundcolor\": b.contactbackgroundcolor,\r\n            \"contactcolor\": b.contactcolor,\r\n            \"location\": b.location,\r\n            \"email\": b.email,\r\n            \"github\": b.githublink,\r\n            \"telegram\": b.telegramlink,\r\n            \"insta\": b.insta,\r\n            \"leetcode\": b.leetlink,\r\n            \"yt\": b.ytlink,\r\n            \"ldin\": b.ldinlink,\r\n        }\r\n        data = JSON.stringify(data)\r\n        console.log(data)\r\n        let response = await fetch(\"http://localhost:5000/update/6534d23d11750003f8c19c8d\",{\r\n            mode: 'no-cors',\r\n            headers:{\"Accept\": \"*/*\",\"Content-Type\":\"application/json\",\"data\": data}\r\n        })\r\n        response = await response.json()\r\n        console.log(response)\r\n    }\r\n    return (\r\n        <button id='create' onClick={Func}>create</button>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,cAAc;AACrB,SAASC,IAAI,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMQ,CAAC,GAAGT,UAAU,CAACE,IAAI,CAAC;EAC1B,MAAMQ,IAAI,GAAG,MAAAA,CAAA,KAAW;IACpBF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIG,IAAI,GAAG;MACP,WAAW,EAAEF,CAAC,CAACG,SAAS;MACxB,UAAU,EAAEH,CAAC,CAACI,QAAQ;MACtB,WAAW,EAAEJ,CAAC,CAACK,SAAS;MACxB,YAAY,EAAEL,CAAC,CAACM,UAAU;MAC1B,iBAAiB,EAAEN,CAAC,CAACO,eAAe;MACpC,aAAa,EAAEP,CAAC,CAACQ,WAAW;MAC5B,kBAAkB,EAAER,CAAC,CAACS,gBAAgB;MACtC,QAAQ,EAAET,CAAC,CAACU,MAAM;MAClB,SAAS,EAAEV,CAAC,CAACW,OAAO;MACpB,WAAW,EAAEX,CAAC,CAACY,SAAS;MACxB,gBAAgB,EAAEZ,CAAC,CAACa,cAAc;MAClC,wBAAwB,EAAEb,CAAC,CAACc,sBAAsB;MAClD,cAAc,EAAEd,CAAC,CAACe,YAAY;MAC9B,UAAU,EAAEf,CAAC,CAACgB,QAAQ;MACtB,OAAO,EAAEhB,CAAC,CAACiB,KAAK;MAChB,QAAQ,EAAEjB,CAAC,CAACkB,UAAU;MACtB,UAAU,EAAElB,CAAC,CAACmB,YAAY;MAC1B,OAAO,EAAEnB,CAAC,CAACoB,KAAK;MAChB,UAAU,EAAEpB,CAAC,CAACqB,QAAQ;MACtB,IAAI,EAAErB,CAAC,CAACsB,MAAM;MACd,MAAM,EAAEtB,CAAC,CAACuB;IACd,CAAC;IACDrB,IAAI,GAAGsB,IAAI,CAACC,SAAS,CAACvB,IAAI,CAAC;IAC3BwB,OAAO,CAACC,GAAG,CAACzB,IAAI,CAAC;IACjB,IAAI0B,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAC;MAC/EC,IAAI,EAAE,SAAS;MACfC,OAAO,EAAC;QAAC,QAAQ,EAAE,KAAK;QAAC,cAAc,EAAC,kBAAkB;QAAC,MAAM,EAAE7B;MAAI;IAC3E,CAAC,CAAC;IACF0B,QAAQ,GAAG,MAAMA,QAAQ,CAACI,IAAI,CAAC,CAAC;IAChCN,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EACzB,CAAC;EACD,oBACIjC,OAAA;IAAQsC,EAAE,EAAC,QAAQ;IAACC,OAAO,EAAEjC,IAAK;IAAAkC,QAAA,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE1D;AAAC1C,EAAA,CAxCuBD,MAAM;AAAA4C,EAAA,GAAN5C,MAAM;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}