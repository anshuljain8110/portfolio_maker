{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Portfolio maker\\\\frontend\\\\src\\\\components\\\\create\\\\Create.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Data } from '../../context/Userdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const b = useContext(Data);\n  const func = async () => {\n    let id = localStorage.getItem(\"userid\");\n    setloading(true);\n    let data = {\n      \"maincolor\": b.maincolor,\n      \"username\": b.username,\n      \"namecolor\": b.namecolor,\n      \"profession\": b.profession,\n      \"professioncolor\": b.professioncolor,\n      \"description\": b.description,\n      \"descriptioncolor\": b.descriptioncolor,\n      \"cvlink\": b.cvlink,\n      \"cvcolor\": b.cvcolor,\n      \"mainimage\": b.mainimage,\n      \"mainimagecolor\": b.mainimagecolor,\n      \"contactbackgroundcolor\": b.contactbackgroundcolor,\n      \"contactcolor\": b.contactcolor,\n      \"location\": b.location,\n      \"email\": b.email,\n      \"github\": b.githublink,\n      \"telegram\": b.telegramlink,\n      \"insta\": b.insta,\n      \"leetcode\": b.leetlink,\n      \"yt\": b.ytlink,\n      \"ldin\": b.ldinlink\n    };\n    data = JSON.stringify(data);\n    let response = await fetch(`http://localhost:5000/update/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"data\": data\n      }\n    });\n    response = await response.json();\n    if (response.response === \"successfull\") {\n      navigator.clipboard.writeText(`http://localhost:3000/user/${localStorage.getItem(\"userid\")}`);\n      b.setinputdisplay(false);\n      b.setlinkdisplay(false);\n      b.seterrormessagedisplay(true);\n      b.seterrormessage(\"Portfolio link coppied to clipboard\");\n      setTimeout(() => {\n        b.seterrormessagedisplay(false);\n      }, 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"create\",\n      onClick: func,\n      style: {\n        color: \"red\"\n      },\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Create, \"Pmn2imqUbBqcJTR6bx3rOc4WUgM=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useContext","useState","Data","jsxDEV","_jsxDEV","Fragment","_Fragment","Create","_s","b","func","id","localStorage","getItem","setloading","data","maincolor","username","namecolor","profession","professioncolor","description","descriptioncolor","cvlink","cvcolor","mainimage","mainimagecolor","contactbackgroundcolor","contactcolor","location","email","githublink","telegramlink","insta","leetlink","ytlink","ldinlink","JSON","stringify","response","fetch","method","headers","json","navigator","clipboard","writeText","setinputdisplay","setlinkdisplay","seterrormessagedisplay","seterrormessage","setTimeout","children","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Portfolio maker/frontend/src/components/create/Create.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { Data } from '../../context/Userdata'\r\n\r\n\r\nexport default function Create() {\r\n    const b = useContext(Data)\r\n    const func = async() => {\r\n        let id = localStorage.getItem(\"userid\")\r\n        setloading(true)\r\n        let data = {\r\n            \"maincolor\": b.maincolor,\r\n            \"username\": b.username,\r\n            \"namecolor\": b.namecolor,\r\n            \"profession\": b.profession,\r\n            \"professioncolor\": b.professioncolor,\r\n            \"description\": b.description,\r\n            \"descriptioncolor\": b.descriptioncolor,\r\n            \"cvlink\": b.cvlink,\r\n            \"cvcolor\": b.cvcolor,\r\n            \"mainimage\": b.mainimage,\r\n            \"mainimagecolor\": b.mainimagecolor,\r\n            \"contactbackgroundcolor\": b.contactbackgroundcolor,\r\n            \"contactcolor\": b.contactcolor,\r\n            \"location\": b.location,\r\n            \"email\": b.email,\r\n            \"github\": b.githublink,\r\n            \"telegram\": b.telegramlink,\r\n            \"insta\": b.insta,\r\n            \"leetcode\": b.leetlink,\r\n            \"yt\": b.ytlink,\r\n            \"ldin\": b.ldinlink\r\n        }\r\n        data = JSON.stringify(data)\r\n\r\n        let response = await fetch(`http://localhost:5000/update/${id}`,\r\n        {\r\n            method:\"GET\",\r\n            headers:{\"data\":data}\r\n        })\r\n        response = await response.json()\r\n        if(response.response===\"successfull\"){\r\n            navigator.clipboard.writeText(`http://localhost:3000/user/${localStorage.getItem(\"userid\")}`);\r\n            b.setinputdisplay(false)\r\n            b.setlinkdisplay(false)\r\n            b.seterrormessagedisplay(true);\r\n            b.seterrormessage(\"Portfolio link coppied to clipboard\")\r\n            setTimeout(() => {\r\n                b.seterrormessagedisplay(false)\r\n            }, 3000);\r\n        }\r\n    }\r\n    return (<>\r\n        <button id='create' onClick={func} style={{color:\"red\"}}>create</button>\r\n    </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}