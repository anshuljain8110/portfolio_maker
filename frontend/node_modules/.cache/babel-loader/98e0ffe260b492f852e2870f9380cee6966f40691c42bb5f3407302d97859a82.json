{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\portfolio_maker\\\\src\\\\components\\\\textinput\\\\Textinput.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport \"./Textinput.css\";\nimport { Data } from \"../../context/Userdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textinput() {\n  _s();\n  const b = useContext(Data);\n  switch (b.pointer) {\n    case 0:\n      let prp = b.githublink;\n      let setprp = b.setgithublink;\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"textinput\",\n    style: b.linkdisplay ? {\n      top: \"10px\"\n    } : {\n      top: \"-200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"for\",\n        children: \"Enter your link here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"www.xyz.com (Optional)\",\n        value: prp,\n        onChange: e => {\n          setprp(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"It is optional to fill the links If you don't fill it then \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 47\n        }, this), \"it will not displayed on your original porfolio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          b.setlinkdisplay(false);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Textinput, \"Pmn2imqUbBqcJTR6bx3rOc4WUgM=\");\n_c = Textinput;\nvar _c;\n$RefreshReg$(_c, \"Textinput\");","map":{"version":3,"names":["React","useContext","Data","jsxDEV","_jsxDEV","Textinput","_s","b","pointer","prp","githublink","setprp","setgithublink","id","style","linkdisplay","top","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","setlinkdisplay","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/portfolio_maker/src/components/textinput/Textinput.js"],"sourcesContent":["import React,{useContext} from 'react'\r\nimport \"./Textinput.css\"\r\nimport {Data} from \"../../context/Userdata\"\r\nexport default function Textinput() {\r\n    const b = useContext(Data)\r\n    switch(b.pointer) {\r\n        case 0:\r\n          let prp = b.githublink\r\n          let setprp = b.setgithublink\r\n          break;\r\n      }\r\n    return (\r\n        <div id='textinput' style={b.linkdisplay?{top:\"10px\"}:{top:\"-200px\"}}>\r\n            <div className='inputbox'>\r\n                <label htmlFor=\"for\">Enter your link here:</label>\r\n                <input type=\"text\" placeholder='www.xyz.com (Optional)'value={prp} onChange={e=>{setprp(e.target.value)}}/>\r\n                <p>It is optional to fill the links\r\n                    If you don't fill it then <br/>it will not displayed on your original porfolio\r\n                </p>\r\n                <button onClick={()=>{b.setlinkdisplay(false)}}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,UAAU,QAAO,OAAO;AACtC,OAAO,iBAAiB;AACxB,SAAQC,IAAI,QAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,CAAC,GAAGN,UAAU,CAACC,IAAI,CAAC;EAC1B,QAAOK,CAAC,CAACC,OAAO;IACZ,KAAK,CAAC;MACJ,IAAIC,GAAG,GAAGF,CAAC,CAACG,UAAU;MACtB,IAAIC,MAAM,GAAGJ,CAAC,CAACK,aAAa;MAC5B;EACJ;EACF,oBACIR,OAAA;IAAKS,EAAE,EAAC,WAAW;IAACC,KAAK,EAAEP,CAAC,CAACQ,WAAW,GAAC;MAACC,GAAG,EAAC;IAAM,CAAC,GAAC;MAACA,GAAG,EAAC;IAAQ,CAAE;IAAAC,QAAA,eACjEb,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBb,OAAA;QAAOe,OAAO,EAAC,KAAK;QAAAF,QAAA,EAAC;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDnB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,wBAAwB;QAAAC,KAAK,EAAEjB,GAAI;QAACkB,QAAQ,EAAEC,CAAC,IAAE;UAACjB,MAAM,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAA;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3GnB,OAAA;QAAAa,QAAA,GAAG,6DAC2B,eAAAb,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,mDACnC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJnB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAI;UAACvB,CAAC,CAACwB,cAAc,CAAC,KAAK,CAAC;QAAA,CAAE;QAAAd,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CApBuBD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}